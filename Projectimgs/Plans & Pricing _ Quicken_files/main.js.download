const slideDown = element => element.style.height = `${element.scrollHeight}px`;
const slideUp = element => element.style.height = 0;
const hide = element => element.style.display = "none";

const toggleUpDown = (trigger, element) => {
  trigger.addEventListener("click", () => {
    if (element.offsetHeight == 0) {
      slideDown(element);
    }
    else {
      slideUp(element);
    }
  });
}

// Utility functions
const getCookie = (cookie_name) => {
  let name = cookie_name + "=";

  let cookies = decodeURIComponent(document.cookie).split(';');
  for (let i = 0; i < cookies.length; i++) {
    while (cookies[i].charAt(0) == ' ') {
      cookies[i] = cookies[i].substring(1);
    }
    if (cookies[i].indexOf(name) == 0) {
      return cookies[i].substring(name.length, cookies[i].length);
    }
  }
  return "";
}

const setCookie = (name, value, days) => {
  var expires = "";
  if (days) {
    var date = new Date();
    date.setTime(date.getTime() + (days * 24 * 60 * 60 *1000));
    expires = "; expires=" + date.toUTCString();
  }
  document.cookie = name + "=" + (value || "") + ";secure " + expires + "; path=/";
}
// end of Utility functions

document.addEventListener("DOMContentLoaded", function(event) {
  // Another temporary fix until we are doing daily builds
  // We need to update the discalaimer date to be 15 days in the future, once we have daily/hourly builds
  // We can remove this as it's already being set by 11ty
  let disclaimer_promo_date =  document.querySelector("#disclaimer-promo-date");
  if (disclaimer_promo_date) {
    let date = new Date();
    date.setDate(date.getDate() + 15);

    const PromoDate = date.toLocaleDateString('en-us', { year:"numeric", month:"long", day:"numeric"});
    disclaimer_promo_date.innerHTML = PromoDate;
  }


  // Handle toggle links - links that hide show another element
  // The elements to show hide is defines in the data-toggle attribute
  const toggles = document.querySelectorAll('[data-toggle]');
  toggles.forEach( toggle => {
    toggleUpDown(toggle, document.getElementById(toggle.dataset.toggle));
  });

  // Handle close links - Elements that hide (close) some other element
  const closers = document.querySelectorAll('[data-close]');
  closers.forEach( close => {
    close.addEventListener("click", (e) => {
      e.preventDefault();
      hide(document.getElementById(close.dataset.close));
    });
  });

  // Handle Switch Hero Banner interations
  const switch_hero_banner = document.querySelector(".switch-hero-banner");
  if (switch_hero_banner) {
    let switch_hero_button_first = document.querySelector("#switch-hero-button-first");
    let switch_hero_button_second = document.querySelector("#switch-hero-button-second");
    let first_cta_subtext = document.querySelector(".first-cta-subtext");
    let second_cta_subtext = document.querySelector(".second-cta-subtext");
    let first_image = document.querySelector(".first-image");
    let second_image = document.querySelector(".second-image");

    if (switch_hero_button_first && switch_hero_button_second) {
      switch_hero_button_first.addEventListener('mouseover', () => {
        switch_hero_button_second.classList.replace("primary-blue","secondary-blue");
        switch_hero_button_first.classList.replace("secondary-blue","primary-blue");
        first_image.style.display = "block";
        second_image.style.display = "none";
        switch_hero_button_second.style.marginLeft = "20px";
        switch_hero_button_first.style.marginLeft = "0";
        first_cta_subtext.style.display = "block";
        second_cta_subtext.style.display = "none";
      });
      switch_hero_button_second.addEventListener('mouseover', () => {
        switch_hero_button_first.classList.replace("primary-blue","secondary-blue");
        switch_hero_button_second.classList.replace("secondary-blue","primary-blue");
        first_image.style.display = "none";
        second_image.style.display = "block";
        switch_hero_button_second.style.marginLeft = "20px";
        switch_hero_button_first.style.marginLeft  = "0";
        first_cta_subtext.style.display = "none";
        second_cta_subtext.style.display = "block";
      });
    }
  }

  // Handle Back to top button
  const bttEl = document.querySelector('.btt-contain');
  // for page reloads that are already scrolled down
  if (window.scrollY > 300) {
    bttEl.style.display = 'block';
  }
  else {
    bttEl.style.display = 'none';
  }

  // for scroll events
  document.addEventListener('scroll', () => {
    if(window.scrollY > 300) {
      bttEl.style.display = 'block';
    }
    else {
      bttEl.style.display = 'none';
    }

    // Navbar Sticky on scroll
    const wrapperHeight = document.getElementById('top-banner').offsetHeight;
    let scroll = window.scrollY;
    let mainHeaderBottom = document.querySelector('.navbar');
    const bannerVisible = document.getElementById('top-banner').style.display === 'none';

    if ((bannerVisible && scroll >= 1) || (!bannerVisible && scroll > wrapperHeight)) {
      mainHeaderBottom.classList.add('sticky-nav');
    } else {
      mainHeaderBottom.classList.remove('sticky-nav');
    }
  });

  bttEl.addEventListener('click', (e) => {
    e.preventDefault();
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  })

  // img accordion toggle logic
  const optBoxes = document.querySelectorAll('.image-accordion .option');
  const imgBoxes = document.querySelectorAll('.accordion-box-2 .box-2-image');
  if (optBoxes.length > 0 && imgBoxes.length > 0) {
    document.querySelector('.accordion-box-1').addEventListener('click', (event) => {
      const target = event.target.closest('.option')
      optBoxes.forEach(box => {
        box.classList.remove('active');
      });
      target.classList.toggle('active');
      imgBoxes.forEach(box => {
        box.classList.remove('active');
      });
      const productBox = document.querySelector('#box-2-image-' + target.dataset.optionid);
      if (productBox) { productBox.classList.toggle('active'); }
    });
  }
  // end img accordion toggle logic

  //for navbar

  const menuToggleLinks = document.querySelectorAll('.menu-list-toggle');

 const toggleDropdown = (event) => {
    event.preventDefault();
    const parentDropdownItem = event.currentTarget.closest('.dropdown-item');
    parentDropdownItem.classList.toggle('open');
  }

  const hideAllDropdowns = () => {
    const openDropdowns = document.querySelectorAll('.dropdown-item.open');
    openDropdowns.forEach((dropdown) => {
      dropdown.classList.remove('open');
    });
  }

  menuToggleLinks.forEach((link) => {
    link.addEventListener('click', toggleDropdown);
  });

  document.addEventListener('click', (event) => {
    const clickedElement = event.target;

    if (!clickedElement.classList.contains('menu-list-toggle')) {
      hideAllDropdowns();
    }
  });

  // Mobile Nav Toggle Button
  const clickedElement = document.getElementById("nav-toggle");
  const navbar = document.getElementsByClassName("navbar")[0];

  clickedElement && clickedElement.addEventListener('click', () => {
    const navbar_collapse = document.getElementById("navbar-collapse");
    const body_element = document.querySelector("body");
    navbar && navbar.classList.toggle("navbar_open");
    body_element.classList.toggle("overflow-hidden");
    navbar_collapse.classList.toggle("open");
    clickedElement.classList.toggle("active");
    const allNavItems = document.querySelectorAll('.navbar-collapse .nav-item');
    allNavItems.forEach(function (item) {
        item.classList.remove('open');
    });
  });



  let toggleLinks = document.querySelectorAll('.navbar-collapse .nav-link.dropdown-toggle');
  let backButtons = document.querySelectorAll('.back-to-menu');

  // Add click event listener to each toggle link
  toggleLinks.forEach((link) => {
    link.addEventListener('click', function(e) {
      e.preventDefault(); // Prevent the default action of the anchor click (e.g., navigating to "#")
      if (navbar && navbar.classList.contains("navbar_open")) {
        let currentNavItem = this.parentNode;
        // Remove the class "open" from all "nav-item" elements inside ".navbar-nav"
        let allNavItems = document.querySelectorAll(".navbar-collapse .nav-item");
        allNavItems.forEach((item) => {
          if (item !== currentNavItem) {
            item.classList.remove("open");
          }
        });
        // Add the class "open" to the parent "nav-item" of the clicked toggle link
        currentNavItem.classList.toggle("open");
      }
    });
  });

  // Add click event listener to the back buttons
  backButtons.forEach((button) => {
    button.addEventListener('click', () => {
      // Remove the class "open" from all "nav-item" elements inside ".navbar-collapse"
      let allNavItems = document.querySelectorAll('.navbar-collapse .nav-item');
      allNavItems.forEach(function(item) {
        item.classList.remove('open');
      });
    });
  });

  // Product card toggle functionality
  const grpToggle = document.querySelectorAll('.group-toggle');
  grpToggle.forEach((el) => {
    el.addEventListener('click', () => {
      const activeGroup = document.querySelector('.title-toggle .switches-container input[name="switchGrp"]:checked').value;
      const pSelectOptions = document.querySelector('.selector-options');
      const compareSelect = document.querySelector('#compare-select');

      if (activeGroup == 'Personal') {
        const toggledPersonal = new Event('toggledPersonal');
        document.querySelectorAll('[data-groupType="Personal"]').forEach((card) => {
          card.classList.replace('hidden-group', 'shown-group');
        });
        document.querySelectorAll('[data-groupType="Business"]').forEach((card) => {
          card.classList.replace('shown-group', 'hidden-group');
        });

        if (pSelectOptions) {
          document.querySelector('.selector-options').dispatchEvent(toggledPersonal);
          pSelectOptions.style.display = 'block';
        }

        if (compareSelect) {
          switchCompare('personal');
        }

      }
      else if (activeGroup == 'Business') {
        const toggledBusiness = new Event('toggledBusiness');
        document.querySelectorAll('[data-groupType="Personal"]').forEach((card) => {
          card.classList.replace('shown-group', 'hidden-group');
        });
        document.querySelectorAll('[data-groupType="Business"]').forEach((card) => {
          card.classList.replace('hidden-group', 'shown-group');
        });

        if (pSelectOptions) {
          document.querySelector('.selector-options').dispatchEvent(toggledBusiness);
          pSelectOptions.style.display = 'none';
        }

        if (compareSelect) {
          switchCompare('business');
        }
      }
    }, false);
  });

  const productToggle = document.querySelector('.product-toggle');
  if (productToggle) {
    productToggle.addEventListener('click', (event) => {
      const parentTarget = event.target.dataset.parenttarget;
      if (parentTarget) {
        const visCards = document.querySelectorAll('[data-cardgrp="' + parentTarget + '"] .shown-card');
        const hidCards = document.querySelectorAll('[data-cardgrp="' + parentTarget + '"] .hidden-card');

        visCards.forEach( (card) => { card.classList.replace('shown-card', 'hidden-card'); });
        hidCards.forEach((card) => { card.classList.replace('hidden-card', 'shown-card'); });
      }
    }, false);
  }
  // End product card toggle functionality

	// Logged in User
	let user = getCookie("Drupal.visitor.user_id");

	if (user) {
	  let lastname = getCookie("Drupal.visitor.lastname");
	  let firstname = getCookie("Drupal.visitor.firstname");
	  let token = getCookie("Drupal.visitor.signout");
	  let username = '';

	  if (firstname != "" && lastname != "") {
	    username = firstname + " " + lastname;
	  }
    else {
	    username = user;
	  }

	  let show_username =  document.querySelectorAll('[data-user="show"]');
	  show_username.forEach( (element) => {
	    element.innerText = username;
	  });

	  let ctas = document.querySelectorAll('.cta-btn a[href*="my-account"]');
	  ctas.forEach((element) => {
	    element.setAttribute('href', document.location.origin + "/qam-signout?qam-token=" + token);
	    element.innerHTML = 'Sign Out';
	  });

	  let elems = document.querySelectorAll('[data-login-class="show"]');
	  elems.forEach((element) => {
	    element.classList.add("user-logged-in");
	  });
	}
  // End of logged in user

  // plusminus accordion toggling
  const accordionIcons = document.querySelectorAll('.faq-accordian-card-icon');
  if (accordionIcons) {
    accordionIcons.forEach((element) => {
      element.addEventListener('click', (e) => {
        const targetParentCard = e.target.closest('.faq-accordian-card-container');
        targetParentCard.querySelector('.minus').classList.toggle('active');
        targetParentCard.querySelector('.plus').classList.toggle('active');
        targetParentCard.querySelector('.faq-accordian-card-text').classList.toggle('active');
      });
    });
  }
  // end plusminus accordion toggling

  //media modal
  let mediaModalBtns = document.querySelectorAll('[data-modal="media"]');
  const mediaModal = document.getElementById('mediaModal');
  mediaModalBtns.forEach ((btn) => {
    btn.addEventListener('click', (e) => {

      e.preventDefault();

      let modalType = e.target.getAttribute('data-type');
      let url = e.target.getAttribute('data-url');
      switch (modalType) {
        case 'video-link':
          let embedEle = document.createElement("div");
          embedEle.classList.add('embed-responsive');
          let iframeEle = document.createElement("iframe");
          iframeEle.setAttribute('src', url);
          iframeEle.setAttribute('allow', 'autoplay');
          iframeEle.setAttribute('allowscriptaccess', 'always');
          iframeEle.setAttribute('frameborder', '0');
          iframeEle.setAttribute('type', 'text/html');
          embedEle.appendChild(iframeEle);
          mediaModal.classList.add('media-video');
          mediaModal.querySelector('.modal-body').appendChild(embedEle);
          mediaModal.classList.add('show', 'fade-in');
          break;

        case 'image':
          let imageEle = document.createElement("img");
          imageEle.setAttribute('src',url);
          mediaModal.classList.add('media-image');
          mediaModal.querySelector('.modal-body').appendChild(imageEle);
          mediaModal.classList.add('show', 'fade-in');
          break;
        default:
      }
    })
  })

  mediaModal.querySelector('.modal-close').addEventListener('click', (e) => {
    e.preventDefault();
    mediaModal.classList.remove('show', 'fade-in');
    mediaModal.classList.remove('media-video');
    mediaModal.querySelector('.modal-body').innerHTML = '';
  })

  //media modal end


  //product selector functionality
  const getPselectorTarget= () => {
    const selected = document.querySelectorAll('.selector-options .option.selected');
    const regularCards = document.querySelector('#selector-cards #regular-cards');
    const selectorContain = document.querySelector('.selector-single-cards');
    const selectorCards = document.querySelectorAll('.selector-single-cards .product-card');

    if (selected.length < 1) {
      selectorCards.forEach((card) => {
        card.classList.remove('active');
      });
    }
    let maxWeight = {
      weight: 0,
      productName: null
    }

    selected.forEach((opt, i) => {
      if (opt.dataset.weight >= maxWeight.weight) {
        maxWeight.weight = opt.dataset.weight;
        maxWeight.productName = opt.dataset.ptarget;
      };
    });

    // if the selection goes empty reset it to normal
    if (!maxWeight.productName) {
      regularCards.classList.add('active');
      selectorContain.classList.remove('active');
      return;
    }

    // if the selection has a winner show that card
    const winnerEl = document.querySelector('.selector-cards [data-line="'+maxWeight.productName+'"]');
    const regCardsShowing = regularCards.classList.contains('active');

    if (regCardsShowing) {
      regularCards.classList.toggle('active');
      selectorContain.classList.toggle('active');
      winnerEl.classList.toggle('active');
    }
    else {
      selectorCards.forEach( (card) => {
        card.classList.remove('active');
      });
      winnerEl.classList.toggle('active');
    }
  };

  const pselectOpts = document.querySelectorAll('.selector-options .option');
  pselectOpts.forEach(opt => {
    opt.addEventListener('click', (e) => {
      const parentOpt = opt.closest(".option");
      parentOpt.classList.toggle('selected');
      parentOpt.querySelector('.checkbox .unchecked').classList.toggle('active');
      parentOpt.querySelector('.checkbox .checked').classList.toggle('active');
      getPselectorTarget();
    });
  });

  const pselect = document.querySelector('.selector-options');
  if (pselect) {
    ['toggledPersonal', 'toggledBusiness'].forEach((event) => {
      pselect.addEventListener(event, () => {
        const regularCards = document.querySelector('#selector-cards #regular-cards');
        const selectorContain = document.querySelector('.selector-single-cards');
        const selectorCards = document.querySelectorAll('.selector-single-cards .product-card');
        const pselectOpts = document.querySelectorAll('.selector-options .option');
        if (regularCards) {
          regularCards.classList.add('active');
        }
        if (selectorContain) {
          selectorContain.classList.remove('active');
        }
        selectorCards.forEach((card) => {
          card.classList.remove('active');
        });
        pselectOpts.forEach(opt => {
          const parentOpt = opt.closest(".option");
          parentOpt.classList.remove('selected');
          parentOpt.querySelector('.checkbox .checked').classList.remove('active');
          parentOpt.querySelector('.checkbox .unchecked').classList.add('active');
        });
      });
    });
  } //end product selector functionality

  // compare table
  const compareTbl = document.querySelector('.compare-table');
  if (compareTbl) {
    // compare table row toggling
    const collapseRows = document.querySelectorAll('.row-group.collapsable');
    collapseRows.forEach((row) => {
      row.addEventListener('click', () => {
        row.classList.toggle('active');
        const rowTarget = row.dataset.rowtarget;
        const childRows = document.querySelectorAll('[data-rowparent="'+rowTarget+'"]');
        childRows.forEach((subrow) => {
          subrow.classList.toggle('active');
        });
      });
    });


    // compare table product table group
    // const compareDropdown = document.querySelector('.compare-dropdown select');
    const compareDropdown = document.querySelector('#compare-select');
    if (compareDropdown) {
      compareDropdown.addEventListener('input', (event) => {
        const selection = event.target.value;
        //switch header column:
        if (selection.toLowerCase() == 'premier') {
          swapCompareGroup(selection.toLowerCase());
        }
        else if (selection.toLowerCase() == 'deluxe') {
          swapCompareGroup(selection.toLowerCase());
        }
      });
    }
  }

  const swapCompareGroup = (tier) => {
    const header = document.querySelector('.compare-header');
    const body = document.querySelector('.compare-table-body');
    const tblFooter = document.querySelector('.compare-footer');

    if (tier == 'premier') {
      header.querySelector('.head-contain.deluxe').style.display = 'none';
      header.querySelector('.head-contain.premier').style.display = 'initial';
      header.querySelector('.prod-title.deluxe').style.display = 'none';
      header.querySelector('.prod-title.premier').style.display = 'flex';
      body.querySelectorAll('.feature-data.deluxe').forEach(row => {
        row.style.display = 'none';
      });
      body.querySelectorAll('.feature-data.premier').forEach(row => {
        row.style.display = 'flex';
      });
      body.querySelectorAll('.row-group, .row-subgroup').forEach(row => {
        row.classList.remove('show-deluxe');
      });
      tblFooter.querySelector('.product-footer-col.deluxe').style.display = 'none';
      tblFooter.querySelector('.product-footer-col.premier').style.display = 'flex';
    }
    else if (tier =='deluxe') {
      header.querySelector('.head-contain.deluxe').style.display = 'initial';
      header.querySelector('.head-contain.premier').style.display = 'none';
      header.querySelector('.prod-title.deluxe').style.display = 'flex';
      header.querySelector('.prod-title.premier').style.display = 'none';
      body.querySelectorAll('.feature-data.deluxe').forEach(row => {
        row.style.display = 'flex';
      });
      body.querySelectorAll('.feature-data.premier').forEach(row => {
        row.style.display = 'none';
      });
      body.querySelectorAll('.row-group, .row-subgroup').forEach(row => {
        row.classList.add('show-deluxe');
      });
      tblFooter.querySelector('.product-footer-col.deluxe').style.display = 'flex';
      tblFooter.querySelector('.product-footer-col.premier').style.display = 'none';
    }
  }

  const switchCompare = (type) => {
    const header = document.querySelector('.compare-header');
    if (header) {
      if (type == 'personal') {
        const cprTbl = document.querySelector('.compare-table');
        cprTbl.style.display = 'block';

        const cmprSlider = document.querySelector('#feature-card-slider');
        if (cmprSlider) {
          const sliderCallout = cmprSlider.previousElementSibling;
          if (sliderCallout.classList.contains('callout-container')) {
            sliderCallout.style.display = 'block';
          }
        }

        const cmprTable = document.querySelector('.compare-table');
        if (cmprTable) {
          const cmprCallout = cmprTable.previousElementSibling;
          if (cmprCallout.classList.contains('callout-container')) {
            cmprCallout.style.display = 'block';
          }
        }
      }
      else if ( type == 'business') {
        const cprTbl = document.querySelector('.compare-table');
        cprTbl.style.display = 'none';

        const cmprSlider = document.querySelector('#feature-card-slider');
        if (cmprSlider) {
          const sliderCallout = cmprSlider.previousElementSibling;
          if (sliderCallout.classList.contains('callout-container')){
            sliderCallout.style.display = 'none';
          }
        }

        const cmprTable = document.querySelector('.compare-table');
        if (cmprTable) {
          const cmprCallout = cmprTable.previousElementSibling;
          if (cmprCallout.classList.contains('callout-container')) {
            cmprCallout.style.display = 'none';
          }
        }
      }
    }
  }

  const tooltips = document.querySelectorAll('.tooltip-icon').forEach(tooltip => {
    tooltip.addEventListener('mouseenter', e => {
      e.target.closest('.subtitle').querySelector('.tooltip').style.display = 'flex';
    });

    tooltip.addEventListener('mouseleave', e => {
      e.target.closest('.subtitle').querySelector('.tooltip').style.display = 'none';
    });
  });
  // end compare table

  // multi image animation
  const multiImageWrapper = document.querySelector('.multi-image-wrapper');

  if (multiImageWrapper) {
    let interval;

    let MultiImageComponentResize = () => {
      if (window.matchMedia("(max-width: 799px)").matches) {
        clearInterval(interval);

        let itemWidth = imageItem.offsetWidth;
        let imageItemPosition = 0;
        let imageItemClonedPosition = itemWidth;

        imageItemCloned.style.transform = `translateX(100%)`;
        document.querySelector('.multi-image-wrapper').appendChild(imageItemCloned);

        let animateMultiImage = () => {
          imageItemPosition -= 1;
          imageItemClonedPosition -= 1;
          imageItem.style.transform = `translateX(${imageItemPosition}px)`;
          imageItemCloned.style.transform = `translateX(${imageItemClonedPosition}px)`;

          if (imageItemPosition == -itemWidth) {
            imageItemPosition = itemWidth;
          }
          if (imageItemClonedPosition == -itemWidth) {
            imageItemClonedPosition = itemWidth;
          }
        }
        interval =  setInterval(animateMultiImage, 10);
      }
      else {
        multiImageWrapper.querySelector('.multi-image-row.clone')?.remove();
        imageItem.style.transform = 'translateX(0)';
        clearInterval(interval);
      }
    }

    let imageItem = multiImageWrapper.querySelector('.multi-image-row');
    let imageItemCloned = imageItem.cloneNode(true);
    let currentWindowWidth = window.innerWidth;

    imageItemCloned.classList.add('clone');
    MultiImageComponentResize();

    window.addEventListener('resize', function (event) {
      if(currentWindowWidth != window.innerWidth ){
        currentWindowWidth = window.innerWidth;
        MultiImageComponentResize();
      }
    }, true);

    window.addEventListener('unload', () => {
      clearInterval(interval);
    }, false);
  }  // end multi image animation

  // Analytics
  const elements = document.querySelectorAll('[data-analyticsSku]');
  elements.forEach((elem) => {
    elem.addEventListener('click', e => {
      if (window.dataLayer) {
        let data = e.currentTarget.getAttribute("data-analyticsJson").replace(/\n/g,'');

        data = JSON.parse(data);

        const sku = e.currentTarget.getAttribute("data-analyticsSku");
        data.page_url = window.location.pathname;
        data.component = e.currentTarget.closest("section").getAttribute("data-type");
        let price_selector_dollar = `[data-qkn-sku="${sku}"][data-qkn-type="price_dollars"]`;
        let price_selector_cents = `[data-qkn-sku="${sku}"][data-qkn-type="price_cents"]`;
        let original_selector = `[data-qkn-sku="${sku}"][data-qkn-type="originalPrice"]`;

        data.discount_price = document.querySelector(price_selector_dollar).innerText + "." + document.querySelector(price_selector_cents).innerText;
        data.product_price = document.querySelector(original_selector).innerText;

        dataLayer.push(data);
      }
    });
  });

  // End of Analytyics
});// End of DOMContentLoaded


// back button bug to set product toggle back to personal on navigation events
window.addEventListener('unload', () => {
  if (document.querySelector('#switchPersonal')) {
    document.querySelector('#switchPersonal').checked = true;
  }
}, false);
